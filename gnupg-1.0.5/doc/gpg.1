.\" This -*- nroff -*- file has been generated from
.\" DocBook SGML with docbook-to-man on Debian GNU/Linux.
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
'\" t 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n  
.TH "gpg" "1" 
.SH "NAME" 
gpg \(em encryption and signing tool 
.SH "SYNOPSIS" 
.PP 
.nf 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
\fBgpg\fP  [--homedir \fBname\fR]  [--options \fBfile\fR]  [\fBoptions\fR]  \fBcommand\fR  [\fBargs\fR]    
.fi 
.SH "DESCRIPTION" 
.PP 
\fBgpg\fP is the main program for the GnuPG system. 
 
.PP 
This man page only lists the commands and options available. 
For a more verbose documentation get the GNU Privacy Handbook (GPH), which is 
available at http://www.gnupg.org/gph/ . 
You will find a list of HOWTO documents at http://www.gnupg.org/docs.html . 
.SH "COMMANDS" 
.PP 
\fBgpg\fP recognizes these commands: 
.IP "-s, --sign" 10 
Make a signature. This command may be combined 
with --encrypt. 
.IP "--clearsign" 10 
Make a clear text signature. 
.IP "-b, --detach-sign" 10 
Make a detached signature. 
.IP "-e, --encrypt" 10 
Encrypt data. This option may be combined with --sign. 
.IP "-c, --symmetric" 10 
Encrypt with symmetric cipher only. 
This command asks for a passphrase. 
.IP "--store" 10 
Store only (make a simple RFC1991 packet). 
.IP "--decrypt [\fBfile\fR]" 10 
Decrypt \fBfile\fR (or stdin if no file is specified) and 
write it to stdout (or the file specified with 
--output). If the decrypted file is signed, the 
signature is also verified. This command differs 
from the default operation, as it never writes to the 
filename which is included in the file and it 
rejects files which don't begin with an encrypted 
message. 
.IP "--verify [[\fBsigfile\fR]  [\fBsigned-files\fR]]" 10 
Assume that \fBsigfile\fR is a signature and verify it 
without generating any output.	With no arguments, 
the signature packet is read from stdin.  If 
only a sigfile is given, it may be a complete 
signature or a detached signature, in which case 
the signed stuff is expected in a file without the 
".sig" or ".asc" extension.  
With more than 
1 argument, the first should be a detached signature 
and the remaining files are the signed stuff.  To read the signed 
stuff from stdin, use \fB-\fP as the second filename. 
For security reasons a detached signature cannot read the signed 
material from stdin without denoting it in the above way. 
.IP "--verify-files [\fBfiles\fR]" 10 
This is a special version of the --verify command which does not work with 
detached signatures.  The command expects the files to be verified either 
on the command line or reads the filenames from stdin;  each name must be on 
separate line. The command is intended for quick checking of many files. 
.IP "--list-keys [\fBnames\fR]" 10 
.IP "--list-public-keys [\fBnames\fR]" 10 
List all keys from the public keyrings, or just the 
ones given on the command line. 
.IP "--list-secret-keys [\fBnames\fR]" 10 
List all keys from the secret keyrings, or just the 
ones given on the command line. 
.IP "--list-sigs [\fBnames\fR]" 10 
Same as --list-keys, but the signatures are listed too. 
.IP "--check-sigs [\fBnames\fR]" 10 
Same as --list-sigs, but the signatures are verified. 
.IP "--fingerprint [\fBnames\fR]" 10 
List all keys with their fingerprints. This is the 
same output as --list-keys but with the additional output 
of a line with the fingerprint. May also be combined 
with --list-sigs or --check-sigs. 
If this command is given twice, the fingerprints of all 
secondary keys are listed too. 
.IP "--list-packets" 10 
List only the sequence of packets. This is mainly 
useful for debugging. 
.IP "--gen-key" 10 
Generate a new key pair. This command is normally only used 
interactively. 
.IP "" 10 
There is an experimental feature which allows you to create keys 
in batch mode. See the file \fBdoc/DETAILS\fP in the source distribution on how to use this. 
.IP "--edit-key \fBname\fR" 10 
Present a menu which enables you to do all key 
related tasks: 
.RS 
.IP "sign" 10 
Make a signature on key of user \fBname\fR If the key is not yet signed by the default 
user (or the users given with -u), the 
program displays the information of the key 
again, together with its fingerprint and 
asks whether it should be signed. This 
question is repeated for all users specified 
with -u. 
.IP "lsign" 10 
Same as --sign but the signature is marked as 
non-exportable and will therefore never be used 
by others.  This may be used to make keys valid 
only in the local environment. 
.IP "revsig" 10 
Revoke a signature.  GnuPG asks for every 
signature which has been done by one of 
the secret keys, whether a revocation 
certificate should be generated. 
.IP "trust" 10 
Change the owner trust value. This updates the 
trust-db immediately and no save is required. 
.IP "disable" 10 
.IP "enable" 10 
Disable or enable an entire key. A disabled key can normally not be used 
for encryption. 
.IP "adduid" 10 
Create an alternate user id. 
.IP "deluid" 10 
Delete a user id. 
.IP "addkey" 10 
Add a subkey to this key. 
.IP "delkey" 10 
Remove a subkey. 
.IP "revkey" 10 
Revoke a subkey. 
.IP "expire" 10 
Change the key expiration time.  If a key is 
selected, the time of this key will be changed. 
With no selection the key expiration of the 
primary key is changed. 
.IP "passwd" 10 
Change the passphrase of the secret key. 
.IP "uid \fBn\fR" 10 
Toggle selection of user id with index \fBn\fR. 
Use 0 to deselect all. 
.IP "key \fBn\fR" 10 
Toggle selection of subkey with index \fBn\fR. 
Use 0 to deselect all. 
.IP "check" 10 
Check all selected user ids. 
.IP "pref" 10 
List preferences. 
.IP "showpref" 10 
More verbose preferences listing. 
.IP "toggle" 10 
Toggle between public and secret key listing. 
.IP "save" 10 
Save all changes to the key rings and quit. 
.IP "quit" 10 
Quit the program without updating the 
key rings. 
.RE 
.IP "" 10 
The listing shows you the key with its secondary 
keys and all user ids. Selected keys or user ids 
are indicated by an asterisk. The trust value is 
displayed with the primary key: the first is the 
assigned owner trust and the second is the calculated 
trust value.  Letters are used for the values: 
.RS 
.IP "-" 10 
No ownertrust assigned / not yet calculated. 
.IP "e" 10 
Trust 
calculation has failed; probably due to an expired key. 
.IP "q" 10 
Not enough information for calculation. 
.IP "n" 10 
Never trust this key. 
.IP "m" 10 
Marginally trusted. 
.IP "f" 10 
Fully trusted. 
.IP "u" 10 
Ultimately trusted. 
.RE 
.IP "--sign-key \fBname\fR" 10 
Sign a public key with your secret key.	This is a shortcut version 
of the subcommand "sign" from --edit. 
.IP "--lsign-key \fBname\fR" 10 
Sign a public key with your secret key but mark it as non-exportable. 
This is a shortcut version of the subcommand "lsign" from --edit. 
.IP "--trusted-key \fBlong key ID\fR" 10 
Assume that the specified key (which must be given 
as a  full 8 byte key ID) is as trustworthy as one of 
your own secret keys. This option is useful if you 
don't want to keep your secret keys (or one of them) 
online but still want to be able to check the validity of a given 
recipient's or signator's key.  
.IP "--delete-key \fBname\fR" 10 
Remove key from the public keyring 
.IP "--delete-secret-key  \fBname\fR" 10 
Remove key from the secret and public keyring 
.IP "--delete-secret-and-public-key  \fBname\fR" 10 
Same as --delete-key, but if a secret key exists, it will be removed first. 
.IP "--gen-revoke" 10 
Generate a revocation certificate for the complete key. To revoke 
a subkey or a signature, use the --edit command. 
.IP "--export [\fBnames\fR]" 10 
Either export all keys from all keyrings (default 
keyrings and those registered via option --keyring), 
or if at least one name is given, those of the given 
name. The new keyring is written to stdout or to 
the file given with option "output".  Use together 
with --armor to mail those keys. 
.IP "--send-keys [\fBnames\fR]" 10 
Same as --export but sends the keys to a keyserver. 
Option --keyserver must be used to give the name 
of this keyserver. Don't send your complete keyring 
to a keyserver - select only those keys which are new 
or changed by you. 
.IP "--export-all [\fBnames\fR]" 10 
Same as --export, but also exports keys which 
are not compatible with OpenPGP. 
.IP "--export-secret-keys [\fBnames\fR]" 10 
.IP "--export-secret-subkeys [\fBnames\fR]" 10 
Same as --export, but exports the secret keys instead. 
This is normally not very useful and a security risk. 
The second form of the command has the special property to 
render the secret part of the primary key useless; this is 
a GNU extension to OpenPGP and other implementations can 
not be expected to successfully import such a key. 
.IP "--import [\fBfiles\fR]" 10 
.IP "--fast-import [\fBfiles\fR]" 10 
Import/merge keys. This adds the given keys to the 
keyring. 
The fast version does not build 
the trustdb; this can be done at any time with the 
command --update-trustdb. 
.IP "" 10 
There are a few other options which control how this command works. 
Most notable here is the --merge-only option which does not insert new keys 
but does only the merging of new signatures, user-IDs and subkeys. 
See also the option --allow-secret-key-import. 
.IP "--recv-keys \fBkey IDs\fR" 10 
Import the keys with the given key IDs from a HKP 
keyserver. Option --keyserver must be used to 
give the name of this keyserver. 
.IP "--export-ownertrust" 10 
List the assigned ownertrust values in ASCII format 
for backup purposes. 
.IP "--import-ownertrust [\fBfiles\fR]" 10 
Update the trustdb with the ownertrust values stored 
in \fBfiles\fR (or stdin if not given); existing 
values will be overwritten. 
.IP "--print-md \fBalgo\fR [\fBfiles\fR]" 10 
Print message digest of algorithm ALGO for all given files of stdin. 
If "*" is used for the algorithm, digests for all available algorithms 
are printed. 
.IP "--gen-random \fB0|1|2\fR 		   [\fBcount\fR]" 10 
Emit COUNT random bytes of the given quality level. If count is not given 
or zero, an endless sequence of random bytes will be emitted. 
PLEASE, don't use this command unless you know what you are doing; it may 
remove precious entropy from the system! 
.IP "--gen-prime \fBmode\fR 		  \fBbits\fR 		   [\fBqbits\fR]" 10 
Use the source, Luke :-). The output format is still subject to change. 
.IP "--version" 10 
Print version information along with a list 
of supported algorithms. 
.IP "--warranty" 10 
Print warranty information. 
.IP "-h, --help" 10 
Print usage information.  This is a really long list even though it doesn't list 
all options. 
.SH "OPTIONS" 
.PP 
Long options can be put in an options file (default "~/.gnupg/options"). 
Do not write the 2 dashes, but simply the name of the option and any 
required arguments. Lines with a hash as the first non-white-space 
character are ignored. Commands may be put in this file too, but that 
does not make sense. 
.PP 
\fBgpg\fP recognizes these options: 
.IP "-a, --armor" 10 
Create ASCII armored output. 
.IP "-o, --output \fBfile\fR" 10 
Write output to \fBfile\fR. 
.IP "-u, --local-user \fBname\fR" 10 
Use \fBname\fR as the user ID to sign. 
This option is silently ignored for the list commands, 
so that it can be used in an options file. 
.IP "--default-key \fBname\fR" 10 
Use \fBname\fR as default user ID for signatures.  If this 
is not used the default user ID is the first user ID 
found in the secret keyring. 
.IP "-r, --recipient \fBname\fR" 10 
.IP "" 10 
Encrypt for user id \fBname\fR. If this option is not 
specified, GnuPG asks for the user-id unless --default-recipient is given 
.IP "--default-recipient \fBname\fR" 10 
Use \fBname\fR as default recipient if option --recipient is not used and 
don't ask if this is a valid one. \fBname\fR must be non-empty. 
.IP "--default-recipient-self" 10 
Use the default key as default recipient if option --recipient is not used and 
don't ask if this is a valid one. The default key is the first one from the 
secret keyring or the one set with --default-key. 
.IP "--no-default-recipient" 10 
Reset --default-recipient and --default-recipient-self. 
.IP "--encrypt-to \fBname\fR" 10 
Same as --recipient but this one is intended for use 
in the options file and may be used with 
your own user-id as an "encrypt-to-self".  These keys 
are only used when there are other recipients given 
either by use of --recipient or by the asked user id. 
No trust checking is performed for these user ids and 
even disabled keys can be used. 
.IP "--no-encrypt-to" 10 
Disable the use of all --encrypt-to keys. 
.IP "-v, --verbose" 10 
Give more information during processing. If used 
twice, the input data is listed in detail. 
.IP "-q, --quiet" 10 
Try to be as quiet as possible. 
.IP "-z \fBn\fR" 10 
Set compression level to \fBn\fR. A value of 0 for \fBn\fR disables compression. Default is to use the default 
compression level of zlib (normally 6). 
.IP "-t, --textmode" 10 
Use canonical text mode.  If -t (but not 
--textmode) is used together with armoring 
and signing, this enables clearsigned messages. 
This kludge is needed for PGP compatibility; 
normally you would use --sign or --clearsign 
to selected the type of the signature. 
.IP "-n, --dry-run" 10 
Don't make any changes (this is not completely implemented). 
.IP "-i, --interactive" 10 
Prompt before overwriting any files. 
.IP "--batch" 10 
Use batch mode.  Never ask, do not allow interactive 
commands. 
.IP "--no-tty" 10 
Make sure that the TTY (terminal) is never used for any output. 
This option is needed in some cases because GnuPG sometimes prints 
warnings to the TTY if --batch is used. 
.IP "--no-batch" 10 
Disable batch mode.  This may be of use if --batch 
is enabled from an options file. 
.IP "--yes" 10 
Assume "yes" on most questions. 
.IP "--no" 10 
Assume "no" on most questions. 
.IP "--always-trust" 10 
Skip key validation and assume that used keys are always fully trusted. 
You won't use this unless you have installed some external validation scheme. 
.IP "--keyserver \fBname\fR" 10 
Use \fBname\fR to lookup keys which are not yet in 
your keyring.  This is only done while verifying 
messages with signatures.  The option is also 
required for the command --send-keys to 
specify the keyserver to where the keys should 
be send.  All keyservers synchronize with each 
other - so there is no need to send keys to more 
than one server.  Using the command 
"host -l pgp.net | grep wwwkeys" gives you a 
list of keyservers.  Because there is load 
balancing using round-robin DNS you may notice 
that you get different key servers. 
.IP "--no-auto-key-retrieve" 10 
This option disables the automatic retrieving of keys from a keyserver 
while verifying signatures. This option allows you to keep a keyserver in 
the options file for the --send-keys and --recv-keys commands. 
.IP "--honor-http-proxy" 10 
Try to access the keyserver over the proxy set with the variable 
"http_proxy". 
.IP "--keyring \fBfile\fR" 10 
Add \fBfile\fR to the list of keyrings. 
If \fBfile\fR begins with a tilde and a slash, these 
are replaced by the HOME directory. If the filename 
does not contain a slash, it is assumed to be in the 
home-directory ("~/.gnupg" if --homedir is not used). 
The filename may be prefixed with a scheme: 
.IP "" 10 
"gnupg-ring:" is the default one. 
.IP "" 10 
"gnupg-gdbm:" may be used for a GDBM ring. Note that GDBM 
is experimental and likely to be removed in future versions. 
.IP "" 10 
It might make sense to use it together with --no-default-keyring. 
.IP "--secret-keyring \fBfile\fR" 10 
Same as --keyring but for the secret keyrings. 
.IP "--homedir \fBdirectory\fR" 10 
Set the name of the home directory to \fBdirectory\fR If this 
option is not used it defaults to "~/.gnupg". It does 
not make sense to use this in a options file. This 
also overrides the environment variable "GNUPGHOME". 
.IP "--charset \fBname\fR" 10 
Set the name of the native character set.  This is used 
to convert some strings to proper UTF-8 encoding. 
Valid values for \fBname\fR are: 
.RS 
.IP "iso-8859-1" 10 
This is the default Latin 1 set. 
.IP "iso-8859-2" 10 
The Latin 2 set. 
.IP "koi8-r" 10 
The usual Russian set (rfc1489). 
.IP "utf-8" 10 
Bypass all translations and assume 
that the OS uses native UTF-8 encoding. 
.RE 
.IP "--utf8-strings" 10 
.IP "--no-utf8-strings" 10 
Assume that the arguments are already given as UTF8 strings.  The default 
(--no-utf8-strings) 
is to assume that arguments are encoded in the character set as specified 
by --charset. These options affect all following arguments.  Both options may 
be used multiple times. 
.IP "--options \fBfile\fR" 10 
Read options from \fBfile\fR and do not try to read 
them from the default options file in the homedir 
(see --homedir). This option is ignored if used 
in an options file. 
.IP "--no-options" 10 
Shortcut for "--options /dev/null".  This option is 
detected before an attempt to open an option file. 
.IP "--load-extension \fBname\fR" 10 
Load an extension module. If \fBname\fR does not 
contain a slash it is searched in "/usr/local/lib/gnupg" 
See the manual for more information about extensions. 
.IP "--debug \fBflags\fR" 10 
Set debugging flags. All flags are or-ed and \fBflags\fR may 
be given in C syntax (e.g. 0x0042). 
.IP "--debug-all" 10 
Set all useful debugging flags. 
.IP "--status-fd \fBn\fR" 10 
Write special status strings to the file descriptor \fBn\fR. 
See the file DETAILS in the documentation for a listing of them. 
.IP "--logger-fd \fBn\fR" 10 
Write log output to file descriptor \fBn\fR and not to stderr. 
.IP "--no-comment" 10 
Do not write comment packets.  This option affects only 
the generation of secret keys.	Please note, that this has nothing 
to do with the comments in clear text signatures. 
.IP "--comment \fBstring\fR" 10 
Use \fBstring\fR as comment string in clear text signatures. 
To suppress those comment strings entirely, use an empty string here. 
.IP "--default-comment" 10 
Force to write the standard comment string in clear 
text signatures.  Use this to overwrite a --comment 
from a config file. 
.IP "--no-version" 10 
Omit the version string in clear text signatures. 
.IP "--emit-version" 10 
Force to write the version string in clear text 
signatures.  Use this to overwrite a previous 
--no-version from a config file. 
.IP "-N, --notation-data \fBname=value\fR" 10 
Put the name value pair into the signature as notation data. 
\fBname\fR must consist only of alphanumeric characters, digits 
or the underscore; the first character must not be a digit. 
\fBvalue\fR may be any printable string; it will be encoded in UTF8, 
so you should check that your --charset is set correctly. 
If you prefix \fBname\fR with an exclamation mark, the notation 
data will be flagged as critical (rfc2440:5.2.3.15). 
.IP "--set-policy-url \fBstring\fR" 10 
Use \fBstring\fR as Policy URL for signatures (rfc2440:5.2.3.19). 
If you prefix it with an exclamation mark, the policy URL 
packet will be flagged as critical. 
.IP "--set-filename \fBstring\fR" 10 
Use \fBstring\fR as the name of file which is stored in 
messages. 
.IP "--use-embedded-filename" 10 
Try to create a file with a name as embedded in the data. 
This can be a dangerous option as it allows to overwrite files. 
.IP "--completes-needed \fBn\fR" 10 
Number of completely trusted users to introduce a new 
key signer (defaults to 1). 
.IP "--marginals-needed \fBn\fR" 10 
Number of marginally trusted users to introduce a new 
key signer (defaults to 3) 
.IP "--max-cert-depth \fBn\fR" 10 
Maximum depth of a certification chain (default is 5). 
.IP "--cipher-algo \fBname\fR" 10 
Use  \fBname\fR as cipher algorithm. Running the program 
with the command --version yields a list of supported 
algorithms. If this is not used the cipher algorithm is 
selected from the preferences stored with the key. 
.IP "--digest-algo \fBname\fR" 10 
Use  \fBname\fR as message digest algorithm. Running the 
program with the command --version yields a list of 
supported algorithms.  Please note that using this 
option may violate the OpenPGP requirement, that a 
160 bit hash is to be used for DSA. 
.IP "--s2k-cipher-algo \fBname\fR" 10 
Use  \fBname\fR as the cipher algorithm used to protect secret 
keys.  The default cipher is BLOWFISH.	This cipher is 
also used for conventional encryption if --cipher-algo 
is not given. 
.IP "--s2k-digest-algo \fBname\fR" 10 
Use  \fBname\fR as the digest algorithm used to mangle the 
passphrases.  The default algorithm is RIPE-MD-160. 
This digest algorithm is also used for conventional 
encryption if --digest-algo is not given. 
.IP "--s2k-mode \fBn\fR" 10 
Selects how passphrases are mangled. If \fBn\fR is 0 
a plain passphrase (which is not recommended) will be used, 
a 1 (default) adds a salt to the passphrase and 
a 3 iterates the whole process a couple of times. 
Unless --rfc1991 is used, this mode is also used 
for conventional encryption. 
.IP "--compress-algo \fBn\fR" 10 
Use compress algorithm	\fBn\fR. Default is 2 which is 
RFC1950 compression. You may use 1 to use the old zlib  
version (RFC1951) which is used by PGP. The default algorithm may 
give better results because the window size is not limited 
to 8K. If this is not used the OpenPGP behavior is used, 
i.e. the compression algorithm is selected from the 
preferences; note, that this can't be done if you do 
not encrypt the data. 
.IP "--disable-cipher-algo \fBname\fR" 10 
Never allow the use of \fBname\fR as cipher algorithm. 
The given name will not be checked so that a later loaded algorithm 
will still get disabled. 
.IP "--disable-pubkey-algo \fBname\fR" 10 
Never allow the use of \fBname\fR as public key algorithm. 
The given name will not be checked so that a later loaded algorithm 
will still get disabled. 
.IP "--no-sig-cache" 10 
Do not cache the verification status of key signatures. 
Caching gives a much better performance in key listings.  However, if 
you suspect that your public keyring is not save against write 
modifications, you can use this option to disable the caching.  It 
probably does not make sense to disable it because all kind of damage 
can be done if someone else has write access to your public keyring. 
.IP "--no-sig-create-check" 10 
GnuPG normally verifies each signature right after creation to protect 
against bugs and hardware malfunctions which could leak out bits from 
the secret key.  This extra verification needs some time (about 115% 
for DSA keys), and so this option can be used to disable it. 
However, due to the fact that the signature creation needs manual 
interaction, this performance penalty does not matter in most settings. 
.IP "--throw-keyid" 10 
Do not put the keyid into encrypted packets.  This option 
hides the receiver of the message and is a countermeasure 
against traffic analysis.  It may slow down the decryption 
process because all available secret keys are tried. 
.IP "--not-dash-escaped" 10 
This option changes the behavior of cleartext signatures 
so that they can be used for patch files. You should not 
send such an armored file via email because all spaces 
and line endings are hashed too.  You can not use this 
option for data which has 5 dashes at the beginning of a 
line, patch files don't have this. A special armor header 
line tells GnuPG about this cleartext signature option. 
.IP "--escape-from-lines" 10 
Because some mailers change lines starting with "From " 
to "<From " it is good to handle such lines in a special 
way when creating cleartext signatures. All other PGP 
versions do it this way too. This option is not enabled 
by default because it would violate rfc2440. 
.IP "--passphrase-fd \fBn\fR" 10 
Read the passphrase from file descriptor \fBn\fR. If you use 
0 for \fBn\fR, the passphrase will be read from stdin.	This 
can only be used if only one passphrase is supplied. 
Don't use this option if you can avoid it. 
.IP "--command-fd \fBn\fR" 10 
This is a replacement for the deprecated shared-memory IPC mode. 
If this option is enabled, user input on questions is not expected 
from the TTY but from the given file descriptor.  It should be used 
together with --status-fd. See the file doc/DETAILS in the source 
distribution for details on how to use it. 
.IP "--use-agent" 10 
Try to use the GnuPG-Agent. Please note that this agent is still under 
development.  With this option, GnuPG first tries to connect to the 
agent before it asks for a passphrase. 
.IP "--rfc1991" 10 
Try to be more RFC1991 (PGP 2.x) compliant. 
.IP "--openpgp" 10 
Reset all packet, cipher and digest options to OpenPGP 
behavior. Use this option to reset all previous 
options like --rfc1991, --force-v3-sigs, --s2k-*, 
--cipher-algo, --digest-algo and --compress-algo to 
OpenPGP compliant values.  All PGP workarounds are also 
disabled. 
.IP "--force-v3-sigs" 10 
OpenPGP states that an implementation should generate 
v4 signatures but PGP 5.x recognizes v4 signatures only 
on key material.  This option forces v3 signatures for 
signatures on data. 
.IP "--force-mdc" 10 
Force the use of encryption with appended manipulation 
code.  This is always used with the newer ciphers (those 
with a blocksize greater than 64 bit). 
This option might not be implemented yet. 
.IP "--allow-non-selfsigned-uid" 10 
Allow the import of keys with user IDs which are not self-signed, but 
have at least one signature. 
This only allows the import - key validation will fail and you 
have to check the validity of the key my other means.  This hack is 
needed for some German keys generated with pgp 2.6.3in. You should really 
avoid using it, because OpenPGP has better mechanics to do separate signing 
and encryption keys. 
.IP "--allow-freeform-uid" 10 
Disable all checks on the form of the user ID while generating a new 
one.  This option should only be used in very special environments as 
it does not ensure the de-facto standard format of user IDs. 
.IP "--ignore-time-conflict" 10 
GnuPG normally checks that the timestamps associated with keys and 
signatures have plausible values.  However, sometimes a signature seems to 
be older than the key due to clock problems.  This option makes these 
checks just a warning. 
.IP "--ignore-crc-error" 10 
The ASCII armor used by OpenPG is protected by a CRC checksum against 
transmission errors.  Sometimes it happens that the CRC gets mangled 
somewhere on the transmission channel  
but the actual content (which is anyway protected by 
the OpenPGP protocol) is still okay.  This option will let gpg ignore 
CRC errors. 
.IP "--lock-once" 10 
Lock the databases the first time a lock is requested 
and do not release the lock until the process 
terminates. 
.IP "--lock-multiple" 10 
Release the locks every time a lock is no longer 
needed. Use this to override a previous --lock-once 
from a config file. 
.IP "--lock-never" 10 
Disable locking entirely.  This option should be used only in very 
special environments, where it can be assured that only one process 
is accessing those files.  A bootable floppy with a stand-alone 
encryption system will probably use this.  Improper usage of this 
option may lead to data and key corruption. 
.IP "--no-random-seed-file" 10 
GnuPG uses a file to store its internal random pool over invocations. 
This makes random generation faster; however sometimes write operations 
are not desired.  This option can be used to achieve that with the cost of 
slower random generation. 
.IP "--no-verbose" 10 
Reset verbose level to 0. 
.IP "--no-greeting" 10 
Suppress the initial copyright message but do not 
enter batch mode. 
.IP "--no-secmem-warning" 10 
Suppress the warning about "using insecure memory". 
.IP "--no-armor" 10 
Assume the input data is not in ASCII armored format. 
.IP "--no-default-keyring" 10 
Do not add the default keyrings to the list of 
keyrings. 
.IP "--skip-verify" 10 
Skip the signature verification step.  This may be 
used to make the decryption faster if the signature 
verification is not needed. 
.IP "--with-colons" 10 
Print key listings delimited by colons. 
.IP "--with-key-data" 10 
Print key listings delimited by colons and print the public key data. 
.IP "--with-fingerprint" 10 
Same as the command --fingerprint but changes only the format of the output 
and may be used together with another command. 
.IP "--fast-list-mode" 10 
Changes the output of the list commands to work faster; this is achieved 
by leaving some parts empty.  Some applications don't need the user ID and 
the trust information given in the listings.  By using this options they 
can get a faster listing.  The exact behaviour of this option may change 
in future versions. 
.IP "--fixed-list-mode" 10 
Do not merge user ID and primary key in --with-colon listing mode and 
print all timestamps as seconds since 1970-01-01. 
.IP "--list-only" 10 
Changes the behaviour of some commands.  This is like --dry-run but 
different in some cases.  The semantic of this command may be extended in 
the future.  Currently it only skips the actual decryption pass and 
therefore enables a fast listing of the encryption keys. 
.IP "--no-literal" 10 
This is not for normal use.  Use the source to see for what it might be useful. 
.IP "--set-filesize" 10 
This is not for normal use.  Use the source to see for what it might be useful. 
.IP "--emulate-md-encode-bug" 10 
GnuPG versions prior to 1.0.2 had a bug in the way a signature was encoded. 
This options enables a workaround by checking faulty signatures again with 
the encoding used in old versions.  This may only happen for ElGamal signatures 
which are not widely used. 
.IP "--show-session-key" 10 
Display the session key used for one message. See --override-session-key 
for the counterpart of this option. 
.IP "" 10 
We think that Key-Escrow is a Bad Thing; however the user should 
have the freedom to decide whether to go to prison or to reveal the content of 
one specific message without compromising all messages ever encrypted for one 
secret key. DON'T USE IT UNLESS YOU ARE REALLY FORCED TO DO SO. 
.IP "--override-session-key \fBstring\fR " 10 
Don't use the public key but the session key \fBstring\fR.  The format of this 
string is the same as the one printed by --show-session-key.  This option 
is normally not used but comes handy in case someone forces you to reveal the 
content of an encrypted message; using this option you can do this without 
handing out the secret key. 
.IP "--merge-only" 10 
Don't insert new keys into the keyrings while doing an import. 
.IP "--allow-secret-key-import" 10 
Allow import of secret keys.  The import command normally skips secret 
keys because a secret key can otherwise be used to attack the trust 
calculation. 
.IP "--try-all-secrets" 10 
Don't look at the key ID as stored in the message but try all secret keys in 
turn to find the right decryption key.	This option forces the behaviour as 
used by anonymous recipients (created by using --throw-keyid) and might come 
handy in case where an encrypted message contains a bogus key ID. 
.IP "--enable-special-filenames" 10 
This options enables a mode in which filenames of the form 
\fB-&n\fP, where n is a non-negative decimal number, 
refer to the file descriptor n and not to a file with that name. 
.IP "--no-expensive-trust-checks" 10 
Experimental use only. 
.SH "How to specify a user ID" 
.PP 
There are different ways on how to specify a user ID to GnuPG; 
here are some examples: 
 
.IP "" 10 
.IP "234567C4" 10 
.IP "0F34E556E" 10 
.IP "01347A56A" 10 
.IP "0xAB123456" 10 
Here the key ID is given in the usual short form. 
.IP "234AABBCC34567C4" 10 
.IP "0F323456784E56EAB" 10 
.IP "01AB3FED1347A5612" 10 
.IP "0x234AABBCC34567C4" 10 
Here the key ID is given in the long form as used by OpenPGP. 
.IP "1234343434343434C434343434343434" 10 
.IP "123434343434343C3434343434343734349A3434" 10 
.IP "0E12343434343434343434EAB3484343434343434" 10 
.IP "0xE12343434343434343434EAB3484343434343434" 10 
The best way to specify a key ID is by using the fingerprint of 
the key.  This avoids any ambiguities in case that there are duplicated 
key IDs (which are really rare for the long key IDs). 
.IP "=Heinrich Heine <heinrichh@uni-duesseldorf.de>" 10 
Using an exact to match string.  The equal sign indicates this. 
.IP "<heinrichh@uni-duesseldorf.de>" 10 
Using the email address part which must match exactly.	The left angle bracket 
indicates this email address mode. 
.IP "+Heinrich Heine duesseldorf" 10 
All words must match exactly (not case sensitive) but can appear in 
any order in the user ID.  Words are any sequences of letters, 
digits, the underscore and all characters with bit 7 set. 
.IP "#34" 10 
Using the Local ID.  This is a very low level method and should 
only be used by applications which really need it.  The hash character 
indicates this method.	An application should not assume that this is 
only a number. 
.IP "Heine" 10 
.IP "*Heine" 10 
By case insensitive substring matching.  This is the default mode but 
applications may want to explicitly indicate this by putting the asterisk 
in front. 
.PP 
Note that you can append an exclamation mark to key IDs or 
fingerprints.  This flag which tells GnuPG to use exactly 
that primary or secondary key and don't try to figure out which  
secondary or primary key to use. 
 
.SH "RETURN VALUE" 
.PP 
The program returns 0 if everything was fine, 1 if at least 
a signature was bad, and other error codes for fatal errors. 
 
.SH "EXAMPLES" 
.IP "gpg -se -r \fBBob\fR \fBfile\fR" 10 
sign and encrypt for user Bob 
.IP "gpg --clearsign \fBfile\fR" 10 
make a clear text signature 
.IP "gpg -sb  \fBfile\fR" 10 
make a detached signature 
.IP "gpg --list-keys  \fBuser_ID\fR" 10 
show keys 
.IP "gpg --fingerprint  \fBuser_ID\fR" 10 
show fingerprint 
.IP "gpg --verify  \fBpgpfile\fR" 10 
.IP "gpg --verify  \fBsigfile\fR [\fBfiles\fR]" 10 
Verify the signature of the file but do not output the data. The second form 
is used for detached signatures, where \fBsigfile\fR is the detached 
signature (either ASCII armored of binary) and [\fBfiles\fR] are the signed 
data; if this is not given the name of the file holding the signed data is 
constructed by cutting off the extension (".asc" or ".sig") of 
\fBsigfile\fR or by asking the user for the filename. 
.SH "ENVIRONMENT" 
.IP "HOME" 10 
Used to locate the default home directory. 
.IP "GNUPGHOME" 10 
If set directory used instead of "~/.gnupg". 
.IP "http_proxy" 10 
Only honored when the option --honor-http-proxy is set. 
.SH "FILES" 
.IP "~/.gnupg/secring.gpg" 10 
The secret keyring 
.IP "~/.gnupg/secring.gpg.lock" 10 
and the lock file 
.IP "~/.gnupg/pubring.gpg" 10 
The public keyring 
.IP "~/.gnupg/pubring.gpg.lock" 10 
and the lock file 
.IP "~/.gnupg/trustdb.gpg" 10 
The trust database 
.IP "~/.gnupg/trustdb.gpg.lock" 10 
and the lock file 
.IP "~/.gnupg/random_seed" 10 
used to preserve the internal random pool 
.IP "~/.gnupg/options" 10 
May contain options 
.IP "/usr[/local]/share/gnupg/options.skel" 10 
Skeleton options file 
.IP "/usr[/local]/lib/gnupg/" 10 
Default location for extensions 
.SH "WARNINGS" 
.PP 
Use a *good* password for your user account and a *good* passphrase 
to protect your secret key.  This passphrase is the weakest part of the 
whole system.  Programs to do dictionary attacks on your secret keyring 
are very easy to write and so you should protect your "~/.gnupg/" 
directory very well. 
.PP 
Keep in mind that, if this program is used over a network (telnet), it 
is *very* easy to spy out your passphrase! 
.PP 
If you are going to verify detached signatures, make sure that the 
program nows about it; either be giving both filenames on the 
commandline or using \fB-\fP to specify stdin. 
.SH "BUGS" 
.PP 
On many systems this program should be installed as setuid(root). This 
is necessary to lock memory pages. Locking memory pages prevents the 
operating system from writing memory pages to disk. If you get no 
warning message about insecure memory your operating system supports 
locking without being root. The program drops root privileges as soon 
as locked memory is allocated. 
...\" created by instant / docbook-to-man, Sat 28 Apr 2001, 20:43 
